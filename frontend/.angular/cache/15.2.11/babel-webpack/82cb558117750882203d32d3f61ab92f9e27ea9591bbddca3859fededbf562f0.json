{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/order.service\";\nimport * as i2 from \"../services/product.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction OrdersComponent_ng_container_5_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const product_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    i0.ɵɵproperty(\"value\", i_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(product_r3.name);\n  }\n}\nfunction OrdersComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"select\", 6);\n    i0.ɵɵlistener(\"change\", function OrdersComponent_ng_container_5_Template_select_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onSelectProduct(ctx_r5.products[$event.target.value]));\n    });\n    i0.ɵɵtemplate(2, OrdersComponent_ng_container_5_option_2_Template, 2, 2, \"option\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.products);\n  }\n}\nfunction OrdersComponent_div_11_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const orderDetail_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate4(\" \", orderDetail_r9.quantity, \"x \", orderDetail_r9.productId, \" - \", (tmp_0_0 = ctx_r8.getProductById(orderDetail_r9.productId)) == null ? null : tmp_0_0.name, \" - \", orderDetail_r9.price, \"$ \");\n  }\n}\nfunction OrdersComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\")(13, \"h3\");\n    i0.ɵɵtext(14, \"Order Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"ul\");\n    i0.ɵɵtemplate(16, OrdersComponent_div_11_li_16_Template, 2, 4, \"li\", 5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const order_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"ID: \", order_r7._id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Status: \", order_r7.status, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Delivery Address: \", order_r7.deliveryAddress, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Payment Method: \", order_r7.paymentMethod, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Date: \", i0.ɵɵpipeBind1(11, 6, order_r7.date), \"\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", order_r7.orderDetails);\n  }\n}\nexport class OrdersComponent {\n  constructor(orderService, productService) {\n    this.orderService = orderService;\n    this.productService = productService;\n    this.orders = [];\n    this.newOrder = {\n      userId: 0,\n      deliveryAddress: '',\n      status: 'PENDING',\n      paymentMethod: 'CREDIT_CARD',\n      date: new Date(),\n      orderDetails: []\n    };\n    this.products = [];\n    this.selectedProduct = null;\n    this.quantity = 1;\n  }\n  ngOnInit() {\n    this.loadOrders();\n    this.loadProducts();\n  }\n  loadOrders() {\n    this.orderService.getOrders().subscribe(data => {\n      this.orders = data;\n    });\n  }\n  loadProducts() {\n    this.productService.getProducts().subscribe(data => {\n      this.products = data;\n    });\n  }\n  addOrder() {\n    if (this.selectedProduct && this.selectedProduct._id !== undefined) {\n      const orderItem = {\n        productId: this.selectedProduct._id,\n        quantity: this.quantity,\n        price: this.selectedProduct.price\n      };\n      this.newOrder.orderDetails.push(orderItem);\n      this.orderService.createOrder(this.newOrder).subscribe(createdOrder => {\n        this.loadOrders();\n        this.newOrder = {\n          userId: 0,\n          deliveryAddress: '',\n          status: 'PENDING',\n          paymentMethod: 'CREDIT_CARD',\n          date: new Date(),\n          orderDetails: []\n        };\n        this.selectedProduct = null;\n        this.quantity = 1;\n      });\n    } else {\n      console.error('Selected product is invalid or undefined');\n    }\n  }\n  onSelectProduct(product) {\n    this.selectedProduct = product;\n  }\n  getProductById(productId) {\n    return this.products.find(product => product._id === productId);\n  }\n  static #_ = this.ɵfac = function OrdersComponent_Factory(t) {\n    return new (t || OrdersComponent)(i0.ɵɵdirectiveInject(i1.OrderService), i0.ɵɵdirectiveInject(i2.ProductService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OrdersComponent,\n    selectors: [[\"app-orders\"]],\n    decls: 12,\n    vars: 3,\n    consts: [[\"for\", \"productSelect\"], [4, \"ngIf\"], [\"for\", \"quantityInput\"], [\"type\", \"number\", \"id\", \"quantityInput\", \"min\", \"1\", \"max\", \"10\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"productSelect\", 3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function OrdersComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Order Management\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\", 0);\n        i0.ɵɵtext(4, \"Select Product:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, OrdersComponent_ng_container_5_Template, 3, 1, \"ng-container\", 1);\n        i0.ɵɵelementStart(6, \"label\", 2);\n        i0.ɵɵtext(7, \"Quantity:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function OrdersComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.quantity = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function OrdersComponent_Template_button_click_9_listener() {\n          return ctx.addOrder();\n        });\n        i0.ɵɵtext(10, \"Add Order\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(11, OrdersComponent_div_11_Template, 17, 8, \"div\", 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.products.length > 0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.quantity);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.orders);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.MinValidator, i4.MaxValidator, i4.NgModel, i3.DatePipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","OrdersComponent","constructor","orderService","productService","userId","deliveryAddress","status","paymentMethod","date","Date","orderDetails","ngOnInit","loadOrders","loadProducts","getOrders","subscribe","data","orders","getProducts","products","addOrder","selectedProduct","_id","undefined","orderItem","productId","quantity","price","newOrder","push","createOrder","createdOrder","console","error","onSelectProduct","product","getProductById","find","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\app_angular\\ecommerce-app\\src\\app\\orders\\orders.component.html","C:\\app_angular\\ecommerce-app\\src\\app\\orders\\orders.component.ts"],"sourcesContent":["<h1>Order Management</h1>\n\n<!-- Formulario para crear una nueva orden -->\n<div>\n  <label for=\"productSelect\">Select Product:</label>\n  <ng-container *ngIf=\"products.length > 0\">\n    <select id=\"productSelect\" (change)=\"onSelectProduct(products[$event.target.value])\">\n      <option *ngFor=\"let product of products; let i = index\" [value]=\"i\">{{ product.name }}</option>\n    </select>\n  </ng-container>\n  <label for=\"quantityInput\">Quantity:</label>\n  <input type=\"number\" id=\"quantityInput\" [(ngModel)]=\"quantity\" min=\"1\" max=\"10\">\n  <button (click)=\"addOrder()\">Add Order</button>\n</div>\n\n<!-- Lista de órdenes -->\n<div *ngFor=\"let order of orders\">\n  <div>ID: {{ order._id }}</div>\n  <div>Status: {{ order.status }}</div>\n  <div>Delivery Address: {{ order.deliveryAddress }}</div>\n  <div>Payment Method: {{ order.paymentMethod }}</div>\n  <div>Date: {{ order.date | date }}</div>\n  <div>\n    <!-- Detalle de la orden -->\n    <h3>Order Details</h3>\n    <ul>\n      <li *ngFor=\"let orderDetail of order.orderDetails\">\n        {{ orderDetail.quantity }}x {{ orderDetail.productId }} - {{ getProductById(orderDetail.productId)?.name }} - {{ orderDetail.price }}$\n      </li>\n    </ul>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from '../services/order.service';\nimport { ProductService } from '../services/product.service';\nimport { Order, OrderItem } from '../models/order.model';\nimport { Product } from '../models/product.model';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n  orders: Order[] = [];\n  newOrder: Order = { userId: 0, deliveryAddress: '', status: 'PENDING', paymentMethod: 'CREDIT_CARD', date: new Date(), orderDetails: [] };\n  products: Product[] = [];\n  selectedProduct: Product | null = null;\n  quantity: number = 1;\n\n  constructor(private orderService: OrderService, private productService: ProductService) { }\n\n  ngOnInit(): void {\n    this.loadOrders();\n    this.loadProducts();\n  }\n\n  loadOrders(): void {\n    this.orderService.getOrders().subscribe(data => {\n      this.orders = data;\n    });\n  }\n\n  loadProducts(): void {\n    this.productService.getProducts().subscribe(data => {\n      this.products = data;\n    });\n  }\n\n  addOrder(): void {\n    if (this.selectedProduct && this.selectedProduct._id !== undefined) {\n      const orderItem: OrderItem = {\n        productId: this.selectedProduct._id,\n        quantity: this.quantity,\n        price: this.selectedProduct.price\n      };\n\n      this.newOrder.orderDetails.push(orderItem);\n\n      this.orderService.createOrder(this.newOrder).subscribe((createdOrder: Order) => {\n        this.loadOrders();\n        this.newOrder = { userId: 0, deliveryAddress: '', status: 'PENDING', paymentMethod: 'CREDIT_CARD', date: new Date(), orderDetails: [] };\n        this.selectedProduct = null;\n        this.quantity = 1;\n      });\n    } else {\n      console.error('Selected product is invalid or undefined');\n    }\n  }\n\n  onSelectProduct(product: Product): void {\n    this.selectedProduct = product;\n  }\n\n  getProductById(productId: number): Product | undefined {\n    return this.products.find(product => product._id === productId);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}