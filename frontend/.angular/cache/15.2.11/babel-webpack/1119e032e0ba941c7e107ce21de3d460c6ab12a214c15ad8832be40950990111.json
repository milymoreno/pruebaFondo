{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8000/api/products'; // URL del microservicio en Java\n  }\n\n  getProducts() {\n    return this.http.get(this.apiUrl);\n  }\n  getProductById(productId) {\n    return this.http.get(`${this.apiUrl}/${productId}`);\n  }\n  /* createProduct(product: Product): Observable<Product> {\r\n     return this.http.post<Product>(this.apiUrl, product);\r\n   }*/\n  createProduct(formData) {\n    return this.http.post(this.apiUrl, formData);\n  }\n  /*updateProduct(product: Product): Observable<Product> {\r\n    return this.http.put<Product>(`${this.apiUrl}/${product.id}`, product);\r\n  }*/\n  updateProduct(formData) {\n    return this.http.put(`${this.apiUrl}/${productId}`, formData);\n  }\n  deleteImage(productId, imageId) {\n    return this.http.delete(`${this.apiUrl}/${productId}/images/${imageId}`);\n  }\n  deleteProduct(productId) {\n    return this.http.delete(`${this.apiUrl}/${productId}`);\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,oCAAoC,CAAC,CAAC;EAEf;;EAExCC,WAAW;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,IAAI,CAACC,MAAM,CAAC;EAC9C;EAEAC,cAAc,CAACC,SAAiB;IAC9B,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAU,GAAG,IAAI,CAACC,MAAM,IAAIE,SAAS,EAAE,CAAC;EAC9D;EAED;;;EAICC,aAAa,CAACC,QAAkB;IAC9B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAU,IAAI,CAACL,MAAM,EAAEI,QAAQ,CAAC;EACvD;EAEA;;;EAIAE,aAAa,CAAEF,QAAkB;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAU,GAAG,IAAI,CAACP,MAAM,IAAIE,SAAS,EAAE,EAAEE,QAAQ,CAAC;EACxE;EAEAI,WAAW,CAACN,SAAiB,EAAEO,OAAe;IAC5C,OAAO,IAAI,CAACZ,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACV,MAAM,IAAIE,SAAS,WAAWO,OAAO,EAAE,CAAC;EAChF;EAEAE,aAAa,CAACT,SAAiB;IAC7B,OAAO,IAAI,CAACL,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACV,MAAM,IAAIE,SAAS,EAAE,CAAC;EAC9D;EAAC;qBAnCUP,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAiB,SAAdjB,cAAc;IAAAkB,YAFb;EAAM","names":["ProductService","constructor","http","getProducts","get","apiUrl","getProductById","productId","createProduct","formData","post","updateProduct","put","deleteImage","imageId","delete","deleteProduct","factory","providedIn"],"sourceRoot":"","sources":["C:\\app_angular\\ecommerce-app\\src\\app\\services\\product.service.ts"],"sourcesContent":["\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Product } from '../models/product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private apiUrl = 'http://localhost:8000/api/products'; // URL del microservicio en Java\n\n  constructor(private http: HttpClient) { }\n\n  getProducts(): Observable<Product[]> {    \n    return this.http.get<Product[]>(this.apiUrl);\n  }\n\n  getProductById(productId: number): Observable<Product> {\n    return this.http.get<Product>(`${this.apiUrl}/${productId}`);\n  }\n\n /* createProduct(product: Product): Observable<Product> {\n    return this.http.post<Product>(this.apiUrl, product);\n  }*/\n\n  createProduct(formData: FormData): Observable<Product> {\n    return this.http.post<Product>(this.apiUrl, formData);\n  }\n\n  /*updateProduct(product: Product): Observable<Product> {\n    return this.http.put<Product>(`${this.apiUrl}/${product.id}`, product);\n  }*/\n\n  updateProduct( formData: FormData): Observable<Product> {\n    return this.http.put<Product>(`${this.apiUrl}/${productId}`, formData);\n  }\n\n  deleteImage(productId: number, imageId: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${productId}/images/${imageId}`);\n  }\n\n  deleteProduct(productId: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${productId}`);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}