{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/order.service\";\nimport * as i3 from \"../services/product.service\";\nexport class CreateOrderComponent {\n  constructor(fb, orderService, productService) {\n    this.fb = fb;\n    this.orderService = orderService;\n    this.productService = productService;\n    this.products = [];\n    this.orderForm = this.fb.group({\n      date: [''],\n      status: [''],\n      delivery_address: [''],\n      payment_method: [''],\n      user_id: [''],\n      orderDetails: this.fb.array([])\n    });\n  }\n  ngOnInit() {\n    this.productService.getProducts().subscribe(data => {\n      this.products = data;\n    });\n  }\n  get orderDetails() {\n    return this.orderForm.get('orderDetails');\n  }\n  addProduct() {\n    this.orderDetails.push(this.fb.group({\n      product_id: [''],\n      quantity: ['']\n    }));\n  }\n  removeProduct(index) {\n    this.orderDetails.removeAt(index);\n  }\n  onSubmit() {\n    this.orderService.createOrder(this.orderForm.value).subscribe(response => {\n      console.log('Order created', response);\n    });\n  }\n  static #_ = this.ɵfac = function CreateOrderComponent_Factory(t) {\n    return new (t || CreateOrderComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.OrderService), i0.ɵɵdirectiveInject(i3.ProductService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateOrderComponent,\n    selectors: [[\"app-create-order\"]],\n    decls: 2,\n    vars: 0,\n    template: function CreateOrderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"create-order works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;AAYA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,EAAe,EACfC,YAA0B,EAC1BC,cAA8B;IAF9B,OAAE,GAAFF,EAAE;IACF,iBAAY,GAAZC,YAAY;IACZ,mBAAc,GAAdC,cAAc;IALxB,aAAQ,GAAc,EAAE;IAOtB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC7BC,IAAI,EAAE,CAAC,EAAE,CAAC;MACVC,MAAM,EAAE,CAAC,EAAE,CAAC;MACZC,gBAAgB,EAAE,CAAC,EAAE,CAAC;MACtBC,cAAc,EAAE,CAAC,EAAE,CAAC;MACpBC,OAAO,EAAE,CAAC,EAAE,CAAC;MACbC,YAAY,EAAE,IAAI,CAACV,EAAE,CAACW,KAAK,CAAC,EAAE;KAC/B,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,CAACV,cAAc,CAACW,WAAW,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACjD,IAAI,CAACC,QAAQ,GAAGD,IAAI;IACtB,CAAC,CAAC;EACJ;EAEA,IAAIL,YAAY;IACd,OAAO,IAAI,CAACP,SAAS,CAACc,GAAG,CAAC,cAAc,CAAc;EACxD;EAEAC,UAAU;IACR,IAAI,CAACR,YAAY,CAACS,IAAI,CAAC,IAAI,CAACnB,EAAE,CAACI,KAAK,CAAC;MACnCgB,UAAU,EAAE,CAAC,EAAE,CAAC;MAChBC,QAAQ,EAAE,CAAC,EAAE;KACd,CAAC,CAAC;EACL;EAEAC,aAAa,CAACC,KAAa;IACzB,IAAI,CAACb,YAAY,CAACc,QAAQ,CAACD,KAAK,CAAC;EACnC;EAEAE,QAAQ;IACN,IAAI,CAACxB,YAAY,CAACyB,WAAW,CAAC,IAAI,CAACvB,SAAS,CAACwB,KAAK,CAAC,CAACb,SAAS,CAACc,QAAQ,IAAG;MACvEC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAAC;IACxC,CAAC,CAAC;EACJ;EAAC;qBA5CU9B,oBAAoB;EAAA;EAAA;UAApBA,oBAAoB;IAAAiC;IAAAC;IAAAC;IAAAC;MAAA;QCZjCC,yBAAG;QAAAA,mCAAmB;QAAAA,iBAAI","names":["CreateOrderComponent","constructor","fb","orderService","productService","orderForm","group","date","status","delivery_address","payment_method","user_id","orderDetails","array","ngOnInit","getProducts","subscribe","data","products","get","addProduct","push","product_id","quantity","removeProduct","index","removeAt","onSubmit","createOrder","value","response","console","log","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\app_angular\\ecommerce-app\\src\\app\\create-order\\create-order.component.ts","C:\\app_angular\\ecommerce-app\\src\\app\\create-order\\create-order.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\nimport { OrderService } from '../services/order.service';\nimport { ProductService } from '../services/product.service';\nimport { Product } from '../models/product';\n\n\n@Component({\n  selector: 'app-create-order',\n  templateUrl: './create-order.component.html',\n  styleUrls: ['./create-order.component.css']\n})\nexport class CreateOrderComponent implements OnInit {\n  orderForm: FormGroup;\n  products: Product[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private orderService: OrderService,\n    private productService: ProductService\n  ) {\n    this.orderForm = this.fb.group({\n      date: [''],\n      status: [''],\n      delivery_address: [''],\n      payment_method: [''],\n      user_id: [''],\n      orderDetails: this.fb.array([])\n    });\n  }\n\n  ngOnInit() {\n    this.productService.getProducts().subscribe(data => {\n      this.products = data;\n    });\n  }\n\n  get orderDetails() {\n    return this.orderForm.get('orderDetails') as FormArray;\n  }\n\n  addProduct() {\n    this.orderDetails.push(this.fb.group({\n      product_id: [''],\n      quantity: ['']\n    }));\n  }\n\n  removeProduct(index: number) {\n    this.orderDetails.removeAt(index);\n  }\n\n  onSubmit() {\n    this.orderService.createOrder(this.orderForm.value).subscribe(response => {\n      console.log('Order created', response);\n    });\n  }\n}\n","<p>create-order works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}