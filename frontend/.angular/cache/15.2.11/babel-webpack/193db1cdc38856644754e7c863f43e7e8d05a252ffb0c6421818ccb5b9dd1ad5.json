{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/order.service\";\nimport * as i4 from \"../services/product.service\";\nimport * as i5 from \"@angular/common\";\nfunction CreateOrderComponent_div_22_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const product_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", product_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(product_r5.name);\n  }\n}\nfunction CreateOrderComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"label\");\n    i0.ɵɵtext(2, \"Product:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 16);\n    i0.ɵɵtemplate(4, CreateOrderComponent_div_22_option_4_Template, 2, 2, \"option\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"label\");\n    i0.ɵɵtext(6, \"Quantity:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 18);\n    i0.ɵɵelementStart(8, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function CreateOrderComponent_div_22_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const i_r3 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.removeProduct(i_r3));\n    });\n    i0.ɵɵtext(9, \"Remove\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.products);\n  }\n}\nfunction CreateOrderComponent_div_27_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"li\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const product_r11 = ctx.ngIf;\n    const detail_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate5(\" \", detail_r8.value.product_id, \" - \", product_r11.name, \" - \", product_r11.description, \" - \", product_r11.price, \"$ x \", detail_r8.value.quantity, \" \");\n  }\n}\nfunction CreateOrderComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"ul\");\n    i0.ɵɵtemplate(2, CreateOrderComponent_div_27_ng_container_2_Template, 3, 5, \"ng-container\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const detail_r8 = ctx.$implicit;\n    const i_r9 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r9);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.getProductById(detail_r8.value.product_id));\n  }\n}\nexport let CreateOrderComponent = /*#__PURE__*/(() => {\n  class CreateOrderComponent {\n    constructor(fb, route, router, orderService, productService) {\n      this.fb = fb;\n      this.route = route;\n      this.router = router;\n      this.orderService = orderService;\n      this.productService = productService;\n      this.products = [];\n      this.isEditMode = false;\n      this.orderId = null;\n      this.orderForm = this.fb.group({\n        date: ['', Validators.required],\n        status: ['', Validators.required],\n        delivery_address: ['', Validators.required],\n        payment_method: ['', Validators.required],\n        user_id: ['', Validators.required],\n        orderDetails: this.fb.array([])\n      });\n    }\n    ngOnInit() {\n      this.productService.getProducts().subscribe(data => {\n        this.products = data;\n      });\n      this.route.paramMap.subscribe(params => {\n        this.orderId = Number(params.get('id'));\n        this.isEditMode = !!this.orderId;\n        if (this.isEditMode && this.orderId) {\n          this.loadOrder(this.orderId);\n        }\n      });\n    }\n    get orderDetails() {\n      return this.orderForm.get('orderDetails');\n    }\n    addProduct() {\n      const orderDetailGroup = this.fb.group({\n        product_id: ['', Validators.required],\n        quantity: ['', [Validators.required, Validators.min(1)]]\n      });\n      this.orderDetails.push(orderDetailGroup);\n    }\n    removeProduct(index) {\n      this.orderDetails.removeAt(index);\n    }\n    getProduct(productId) {\n      const product = this.products.find(product => product.id === productId);\n      console.log(`Product ID: ${productId}, Product:`, product); // Debugging line\n      return product;\n    }\n    getProductById(productId) {\n      return this.products.find(product => product.id === productId);\n    }\n    getProductName(productId) {\n      const product = this.getProduct(productId);\n      return product ? product.name : 'Producto no encontrado';\n    }\n    getProductPrice(productId) {\n      const product = this.getProduct(productId);\n      return product ? product.price : 0;\n    }\n    loadOrder(orderId) {\n      this.orderService.getOrderById(orderId).subscribe(order => {\n        this.orderForm.patchValue({\n          date: order.date,\n          status: order.status,\n          delivery_address: order.deliveryAddress,\n          payment_method: order.paymentMethod,\n          user_id: order.userId\n        });\n        order.orderDetails.forEach(detail => {\n          this.orderDetails.push(this.fb.group({\n            product_id: [detail.productId, Validators.required],\n            quantity: [detail.quantity, [Validators.required, Validators.min(1)]]\n          }));\n        });\n      });\n    }\n    onSubmit() {\n      if (this.orderForm.valid) {\n        const orderData = {\n          order: {\n            date: this.orderForm.value.date,\n            status: this.orderForm.value.status,\n            deliveryAddress: this.orderForm.value.delivery_address,\n            paymentMethod: this.orderForm.value.payment_method,\n            userId: this.orderForm.value.user_id\n          },\n          orderDetails: this.orderForm.value.orderDetails.map(detail => ({\n            productId: detail.product_id,\n            quantity: detail.quantity\n          }))\n        };\n        if (this.isEditMode && this.orderId) {\n          this.orderService.updateOrder(this.orderId, orderData).subscribe(response => {\n            console.log('Order updated', response);\n            this.router.navigate(['/orders']);\n          });\n        } else {\n          this.orderService.createOrder(orderData).subscribe(response => {\n            console.log('Order created', response);\n            this.router.navigate(['/orders']);\n          });\n        }\n      }\n    }\n    static #_ = this.ɵfac = function CreateOrderComponent_Factory(t) {\n      return new (t || CreateOrderComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.OrderService), i0.ɵɵdirectiveInject(i4.ProductService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CreateOrderComponent,\n      selectors: [[\"app-create-order\"]],\n      decls: 30,\n      vars: 5,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"date\"], [\"type\", \"date\", \"formControlName\", \"date\", \"required\", \"\"], [\"for\", \"status\"], [\"type\", \"text\", \"formControlName\", \"status\", \"required\", \"\"], [\"for\", \"delivery_address\"], [\"type\", \"text\", \"formControlName\", \"delivery_address\", \"required\", \"\"], [\"for\", \"payment_method\"], [\"type\", \"text\", \"formControlName\", \"payment_method\", \"required\", \"\"], [\"for\", \"user_id\"], [\"type\", \"number\", \"formControlName\", \"user_id\", \"required\", \"\"], [\"formArrayName\", \"orderDetails\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"click\"], [\"type\", \"submit\", 3, \"disabled\"], [3, \"formGroupName\"], [\"formControlName\", \"product_id\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"quantity\", \"type\", \"number\"], [3, \"value\"], [4, \"ngIf\"]],\n      template: function CreateOrderComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function CreateOrderComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n          i0.ɵɵtext(3, \"Fecha:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"input\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\")(6, \"label\", 3);\n          i0.ɵɵtext(7, \"Estado:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\")(10, \"label\", 5);\n          i0.ɵɵtext(11, \"Direcci\\u00F3n de Entrega:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\")(14, \"label\", 7);\n          i0.ɵɵtext(15, \"M\\u00E9todo de Pago:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"input\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"div\")(18, \"label\", 9);\n          i0.ɵɵtext(19, \"ID del Usuario:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"div\", 11);\n          i0.ɵɵtemplate(22, CreateOrderComponent_div_22_Template, 10, 2, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"button\", 13);\n          i0.ɵɵlistener(\"click\", function CreateOrderComponent_Template_button_click_23_listener() {\n            return ctx.addProduct();\n          });\n          i0.ɵɵtext(24, \"Add Product\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"h3\");\n          i0.ɵɵtext(26, \"Order Preview\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(27, CreateOrderComponent_div_27_Template, 3, 2, \"div\", 12);\n          i0.ɵɵelementStart(28, \"button\", 14);\n          i0.ɵɵtext(29);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.orderForm);\n          i0.ɵɵadvance(22);\n          i0.ɵɵproperty(\"ngForOf\", ctx.orderDetails.controls);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngForOf\", ctx.orderDetails.controls);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", !ctx.orderForm.valid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Actualizar Orden\" : \"Crear Orden\");\n        }\n      },\n      dependencies: [i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName]\n    });\n  }\n  return CreateOrderComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}