{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/order.service\";\nimport * as i2 from \"../services/product.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction OrdersComponent_div_2_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const orderDetail_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate5(\" \", orderDetail_r3.productId, \" - \", (tmp_0_0 = ctx_r2.getProductById(orderDetail_r3.productId)) == null ? null : tmp_0_0.name, \" - \", (tmp_0_0 = ctx_r2.getProductById(orderDetail_r3.productId)) == null ? null : tmp_0_0.description, \" - \", (tmp_0_0 = ctx_r2.getProductById(orderDetail_r3.productId)) == null ? null : tmp_0_0.price, \"$ x \", orderDetail_r3.quantity, \" \");\n  }\n}\nfunction OrdersComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\")(13, \"h3\");\n    i0.ɵɵtext(14, \"Order Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"ul\");\n    i0.ɵɵtemplate(16, OrdersComponent_div_2_li_16_Template, 2, 5, \"li\", 0);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function OrdersComponent_div_2_Template_button_click_17_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const order_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.editOrder(order_r1.id));\n    });\n    i0.ɵɵtext(18, \"Editar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const order_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"ID: \", order_r1.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Status: \", order_r1.status, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Delivery Address: \", order_r1.deliveryAddress, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Payment Method: \", order_r1.paymentMethod, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Date: \", i0.ɵɵpipeBind1(11, 6, order_r1.date), \"\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", order_r1.orderDetails);\n  }\n}\nexport class OrdersComponent {\n  constructor(orderService, productService, router) {\n    this.orderService = orderService;\n    this.productService = productService;\n    this.router = router;\n    this.orders = [];\n    this.newOrder = {\n      id: 0,\n      userId: 0,\n      deliveryAddress: '',\n      status: 'PENDING',\n      paymentMethod: 'CREDIT_CARD',\n      date: new Date(),\n      orderDetails: []\n    };\n    this.products = [];\n    this.selectedProduct = null;\n    this.quantity = 1;\n  } // Inyectar Router en el constructor\n  ngOnInit() {\n    this.loadOrders();\n    this.loadProducts();\n  }\n  loadOrders() {\n    this.orderService.getOrders().subscribe(orders => {\n      this.orders = orders;\n      // Cargar detalles completos del producto para cada OrderItem\n      this.loadOrderDetails();\n    });\n  }\n  /*mily*/\n  loadOrderDetails() {\n    for (const order of this.orders) {\n      for (const orderItem of order.orderDetails) {\n        this.productService.getProductById(orderItem.productId).subscribe(product => {\n          orderItem.product = product;\n        });\n      }\n    }\n  }\n  /*en mily*/\n  loadProducts() {\n    this.productService.getProducts().subscribe(data => {\n      this.products = data;\n    });\n  }\n  addOrder() {\n    if (this.selectedProduct && this.selectedProduct.id !== undefined) {\n      const orderItem = {\n        productId: this.selectedProduct.id,\n        quantity: this.quantity,\n        price: this.selectedProduct.price\n      };\n      this.newOrder.orderDetails.push(orderItem);\n      this.orderService.createOrder(this.newOrder).subscribe(createdOrder => {\n        this.loadOrders();\n        this.newOrder = {\n          id: 0,\n          userId: 0,\n          deliveryAddress: '',\n          status: 'PENDING',\n          paymentMethod: 'CREDIT_CARD',\n          date: new Date(),\n          orderDetails: []\n        };\n        this.selectedProduct = null;\n        this.quantity = 1;\n      });\n    } else {\n      console.error('Selected product is invalid or undefined');\n    }\n  }\n  onSelectProduct(event) {\n    const selectElement = event.target;\n    const selectedIndex = parseInt(selectElement.value, 10);\n    if (!isNaN(selectedIndex) && this.products[selectedIndex]) {\n      this.selectedProduct = this.products[selectedIndex];\n    } else {\n      this.selectedProduct = null;\n    }\n  }\n  getProductById(productId) {\n    return this.products.find(product => product.id === productId);\n  }\n  editOrder(orderId) {\n    this.router.navigate(['/create-order', orderId]);\n  }\n  static #_ = this.ɵfac = function OrdersComponent_Factory(t) {\n    return new (t || OrdersComponent)(i0.ɵɵdirectiveInject(i1.OrderService), i0.ɵɵdirectiveInject(i2.ProductService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OrdersComponent,\n    selectors: [[\"app-orders\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n    template: function OrdersComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Order Management\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, OrdersComponent_div_2_Template, 19, 8, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.orders);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.DatePipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","OrdersComponent","constructor","orderService","productService","router","id","userId","deliveryAddress","status","paymentMethod","date","Date","orderDetails","ngOnInit","loadOrders","loadProducts","getOrders","subscribe","orders","loadOrderDetails","order","orderItem","getProductById","productId","product","getProducts","data","products","addOrder","selectedProduct","undefined","quantity","price","newOrder","push","createOrder","createdOrder","console","error","onSelectProduct","event","selectElement","target","selectedIndex","parseInt","value","isNaN","find","editOrder","orderId","navigate","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\app_angular\\ecommerce-app\\src\\app\\orders\\orders.component.html","C:\\app_angular\\ecommerce-app\\src\\app\\orders\\orders.component.ts"],"sourcesContent":["<h1>Order Management</h1>\n\n<!-- Lista de órdenes -->\n<div *ngFor=\"let order of orders\">\n  <div>ID: {{ order.id }}</div>\n  <div>Status: {{ order.status }}</div>\n  <div>Delivery Address: {{ order.deliveryAddress }}</div>\n  <div>Payment Method: {{ order.paymentMethod }}</div>\n  <div>Date: {{ order.date | date }}</div>\n  <div>\n    <!-- Detalle de la orden -->\n    <h3>Order Details</h3>\n    <!--<ul>\n      \n      <ng-container *ngFor=\"let orderDetail of order.orderDetails\">\n  <ng-container *ngIf=\"let product = getProductById(orderDetail.productId)\">\n    <li>\n      {{ product.name }} - {{ product.description }} - {{ product.price }}$\n    </li>\n  </ng-container>\n</ng-container>\n    </ul>     -->\n\n   <ul>\n      <li *ngFor=\"let orderDetail of order.orderDetails\">\n        \n        {{ orderDetail.productId }} - {{ getProductById(orderDetail.productId)?.name }} - {{ getProductById(orderDetail.productId)?.description }} - {{ getProductById(orderDetail.productId)?.price }}$ x {{ orderDetail.quantity }}\n      </li>\n    </ul>\n  </div>\n\n  <!-- Botón de Editar -->\n  <button (click)=\"editOrder(order.id)\">Editar</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Order, OrderItem } from '../models/order.model';\nimport { Product } from '../models/product.model';\nimport { OrderService } from '../services/order.service';\nimport { ProductService } from '../services/product.service';\n\nimport { Router } from '@angular/router'; // Importar Router\n\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n  orders: Order[] = [];\n  newOrder: Order = {id:0, userId: 0, deliveryAddress: '', status: 'PENDING', paymentMethod: 'CREDIT_CARD', date: new Date(), orderDetails: [] };\n  products: Product[] = [];\n  selectedProduct: Product | null = null;\n  quantity: number = 1;\n\n  constructor(private orderService: OrderService, private productService: ProductService, private router: Router) { } // Inyectar Router en el constructor\n\n\n  ngOnInit(): void {\n    this.loadOrders();\n    this.loadProducts();\n  }\n\n  loadOrders(): void {\n    this.orderService.getOrders().subscribe(orders => {\n      this.orders = orders;\n      // Cargar detalles completos del producto para cada OrderItem\n      this.loadOrderDetails();\n    });\n  }\n  /*mily*/\n\n  loadOrderDetails(): void {\n    for (const order of this.orders) {\n      for (const orderItem of order.orderDetails) {\n        this.productService.getProductById(orderItem.productId).subscribe(product => {\n          orderItem.product = product;\n        });\n      }\n    }\n  }\n/*en mily*/\n  loadProducts(): void {\n    this.productService.getProducts().subscribe(data => {\n      this.products = data;\n    });\n  }\n\n  addOrder(): void {\n    if (this.selectedProduct && this.selectedProduct.id !== undefined) {\n      const orderItem: OrderItem = {\n        productId: this.selectedProduct.id,\n        quantity: this.quantity,\n        price: this.selectedProduct.price\n      };\n\n      this.newOrder.orderDetails.push(orderItem);\n\n      this.orderService.createOrder(this.newOrder).subscribe((createdOrder: Order) => {\n        this.loadOrders();\n        this.newOrder = { id:0, userId: 0, deliveryAddress: '', status: 'PENDING', paymentMethod: 'CREDIT_CARD', date: new Date(), orderDetails: [] };\n        this.selectedProduct = null;\n        this.quantity = 1;\n      });\n    } else {\n      console.error('Selected product is invalid or undefined');\n    }\n  }\n\n  onSelectProduct(event: Event): void {\n    const selectElement = event.target as HTMLSelectElement;\n    const selectedIndex = parseInt(selectElement.value, 10);\n    if (!isNaN(selectedIndex) && this.products[selectedIndex]) {\n      this.selectedProduct = this.products[selectedIndex];\n    } else {\n      this.selectedProduct = null;\n    }\n  }\n\n  getProductById(productId: number): Product | undefined {\n    return this.products.find(product => product.id === productId);\n  }\n\n  editOrder(orderId: number) {\n    this.router.navigate(['/create-order', orderId]);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}