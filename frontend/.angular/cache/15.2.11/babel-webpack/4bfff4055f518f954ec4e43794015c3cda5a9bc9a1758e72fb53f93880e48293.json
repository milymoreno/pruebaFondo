{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrderService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8082/orders'; // URL del endpoint del servidor para manejar las órdenes Java\n  }\n\n  getOrders() {\n    return this.http.get(`${this.apiUrl}`);\n  }\n  createOrder(order) {\n    return this.http.post(`${this.apiUrl}`, order);\n  }\n  deleteOrder(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static #_ = this.ɵfac = function OrderService_Factory(t) {\n    return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrderService,\n    factory: OrderService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api/products'; // Cambia esta URL a la de tu backend\n  }\n\n  getProducts() {\n    return this.http.get(this.apiUrl);\n  }\n  getProductById(productId) {\n    return this.http.get(`${this.apiUrl}/${productId}`);\n  }\n  createProduct(product) {\n    return this.http.post(this.apiUrl, product);\n  }\n  updateProduct(product) {\n    return this.http.put(`${this.apiUrl}/${product._id}`, product);\n  }\n  deleteProduct(productId) {\n    return this.http.delete(`${this.apiUrl}/${productId}`);\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,8BAA8B,CAAC,CAAC;EAET;;EAExCC,SAAS;IACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAU,GAAG,IAAI,CAACC,MAAM,EAAE,CAAC;EACjD;EAEAC,WAAW,CAACC,KAAY;IACtB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAQ,GAAG,IAAI,CAACH,MAAM,EAAE,EAAEE,KAAK,CAAC;EACvD;EAEAE,WAAW,CAACC,EAAU;IACpB,OAAO,IAAI,CAACR,IAAI,CAACS,MAAM,CAAO,GAAG,IAAI,CAACN,MAAM,IAAIK,EAAE,EAAE,CAAC;EACvD;EAAC;qBAfUV,YAAY;EAAA;EAAA;WAAZA,YAAY;IAAAY,SAAZZ,YAAY;IAAAa,YAFX;EAAM;;AA4BpB,OAAM,MAAOC,cAAc;EAGzBb,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,oCAAoC,CAAC,CAAC;EAEf;;EAExCa,WAAW;IACT,OAAO,IAAI,CAACb,IAAI,CAACE,GAAG,CAAY,IAAI,CAACC,MAAM,CAAC;EAC9C;EAEAW,cAAc,CAACC,SAAiB;IAC9B,OAAO,IAAI,CAACf,IAAI,CAACE,GAAG,CAAU,GAAG,IAAI,CAACC,MAAM,IAAIY,SAAS,EAAE,CAAC;EAC9D;EAEAC,aAAa,CAACC,OAAgB;IAC5B,OAAO,IAAI,CAACjB,IAAI,CAACM,IAAI,CAAU,IAAI,CAACH,MAAM,EAAEc,OAAO,CAAC;EACtD;EAEAC,aAAa,CAACD,OAAgB;IAC5B,OAAO,IAAI,CAACjB,IAAI,CAACmB,GAAG,CAAU,GAAG,IAAI,CAAChB,MAAM,IAAIc,OAAO,CAACG,GAAG,EAAE,EAAEH,OAAO,CAAC;EACzE;EAEAI,aAAa,CAACN,SAAiB;IAC7B,OAAO,IAAI,CAACf,IAAI,CAACS,MAAM,CAAO,GAAG,IAAI,CAACN,MAAM,IAAIY,SAAS,EAAE,CAAC;EAC9D;EAAC;qBAvBUH,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAF,SAAdE,cAAc;IAAAD,YAFb;EAAM","names":["OrderService","constructor","http","getOrders","get","apiUrl","createOrder","order","post","deleteOrder","id","delete","factory","providedIn","ProductService","getProducts","getProductById","productId","createProduct","product","updateProduct","put","_id","deleteProduct"],"sourceRoot":"","sources":["C:\\app_angular\\ecommerce-app\\src\\app\\services\\order.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Order } from '../models/order.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  private apiUrl = 'http://localhost:8082/orders'; // URL del endpoint del servidor para manejar las órdenes Java\n\n  constructor(private http: HttpClient) { }\n\n  getOrders(): Observable<Order[]> {\n    return this.http.get<Order[]>(`${this.apiUrl}`);\n  }\n\n  createOrder(order: Order): Observable<Order> {\n    return this.http.post<Order>(`${this.apiUrl}`, order);\n  }\n\n  deleteOrder(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n}\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Product } from '../models/product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private apiUrl = 'http://localhost:3000/api/products'; // Cambia esta URL a la de tu backend\n\n  constructor(private http: HttpClient) { }\n\n  getProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>(this.apiUrl);\n  }\n\n  getProductById(productId: number): Observable<Product> {\n    return this.http.get<Product>(`${this.apiUrl}/${productId}`);\n  }\n\n  createProduct(product: Product): Observable<Product> {\n    return this.http.post<Product>(this.apiUrl, product);\n  }\n\n  updateProduct(product: Product): Observable<Product> {\n    return this.http.put<Product>(`${this.apiUrl}/${product._id}`, product);\n  }\n\n  deleteProduct(productId: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${productId}`);\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}