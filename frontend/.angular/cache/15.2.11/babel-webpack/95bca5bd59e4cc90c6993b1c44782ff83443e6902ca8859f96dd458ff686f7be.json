{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClienteService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8082/clientes';\n  }\n  buscarClientePorNumeroIdentificacion(numeroIdentificacion) {\n    return this.http.get(`${this.apiUrl}/buscar/${numeroIdentificacion}`);\n  }\n  agregarCliente(cliente) {\n    return this.http.post(this.apiUrl, cliente);\n  }\n  /*obtenerFondosDisponibles(): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiUrl}/fondos`);\r\n    \r\n  }*/\n  asociarFondos(clienteId, fondosSuscritos) {\n    return this.http.post(`${this.apiUrl}/${clienteId}/fondos`, fondosSuscritos);\n  }\n  realizarTransaccion(clienteId, transaccion) {\n    return this.http.post(`${this.apiUrl}/${clienteId}/transacciones`, transaccion);\n  }\n  static #_ = this.ɵfac = function ClienteService_Factory(t) {\n    return new (t || ClienteService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClienteService,\n    factory: ClienteService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAWA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,gCAAgC;EAET;EAExCC,oCAAoC,CAACC,oBAA4B;IAC/D,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACC,MAAM,WAAWF,oBAAoB,EAAE,CAAC;EAC5E;EAEAG,cAAc,CAACC,OAAY;IACzB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAM,IAAI,CAACH,MAAM,EAAEE,OAAO,CAAC;EAClD;EAEA;;;;EAKAE,aAAa,CAACC,SAAiB,EAAEC,eAAsB;IACrD,OAAO,IAAI,CAACV,IAAI,CAACO,IAAI,CAAM,GAAG,IAAI,CAACH,MAAM,IAAIK,SAAS,SAAS,EAAEC,eAAe,CAAC;EACnF;EAEAC,mBAAmB,CAACF,SAAiB,EAAEG,WAAwB;IAC/D,OAAO,IAAI,CAACZ,IAAI,CAACO,IAAI,CAAM,GAAG,IAAI,CAACH,MAAM,IAAIK,SAAS,gBAAgB,EAAEG,WAAW,CAAC;EACtF;EAAC;qBAxBYd,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAe,SAAdf,cAAc;IAAAgB,YAFb;EAAM","names":["ClienteService","constructor","http","buscarClientePorNumeroIdentificacion","numeroIdentificacion","get","apiUrl","agregarCliente","cliente","post","asociarFondos","clienteId","fondosSuscritos","realizarTransaccion","transaccion","factory","providedIn"],"sourceRoot":"","sources":["C:\\fondo\\frontend\\src\\app\\services\\cliente.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n//import { Cliente } from '../models/cliente';\nimport { Transaccion } from '../models/transaccion.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n  private apiUrl = 'http://localhost:8082/clientes';\n\n  constructor(private http: HttpClient) { }\n\n  buscarClientePorNumeroIdentificacion(numeroIdentificacion: string): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/buscar/${numeroIdentificacion}`);\n  }\n\n  agregarCliente(cliente: any): Observable<any> {\n    return this.http.post<any>(this.apiUrl, cliente);\n  }\n\n  /*obtenerFondosDisponibles(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}/fondos`);\n    \n  }*/\n\n  asociarFondos(clienteId: string, fondosSuscritos: any[]): Observable<any> {\n    return this.http.post<any>(`${this.apiUrl}/${clienteId}/fondos`, fondosSuscritos);\n  }\n\n  realizarTransaccion(clienteId: string, transaccion: Transaccion): Observable<any> {\n  return this.http.post<any>(`${this.apiUrl}/${clienteId}/transacciones`, transaccion);\n}\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}