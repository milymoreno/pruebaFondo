{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrderService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8082/orders'; // URL del microservicio en Java\n  }\n\n  getOrders() {\n    return this.http.get(this.baseUrl);\n  }\n  createOrder(order) {\n    return this.http.post(`${this.baseUrl}/create`, order);\n  }\n  updateOrder(id, order) {\n    return this.http.put(`${this.baseUrl}/${id}`, order);\n  }\n  deleteOrder(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n  static #_ = this.ɵfac = function OrderService_Factory(t) {\n    return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrderService,\n    factory: OrderService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,8BAA8B,CAAC,CAAC;EAEX;;EAEvCC,SAAS;IACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAU,IAAI,CAACC,OAAO,CAAC;EAC7C;EAEAC,WAAW,CAACC,KAAY;IACtB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAQ,GAAG,IAAI,CAACH,OAAO,SAAS,EAAEE,KAAK,CAAC;EAC/D;EAEAE,WAAW,CAACC,EAAU,EAAEH,KAAY;IAClC,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAQ,GAAG,IAAI,CAACN,OAAO,IAAIK,EAAE,EAAE,EAAEH,KAAK,CAAC;EAC7D;EAEAK,WAAW,CAACF,EAAU;IACpB,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAO,GAAG,IAAI,CAACR,OAAO,IAAIK,EAAE,EAAE,CAAC;EACxD;EAAC;qBAnBUV,YAAY;EAAA;EAAA;WAAZA,YAAY;IAAAc,SAAZd,YAAY;IAAAe,YAFX;EAAM","names":["OrderService","constructor","http","getOrders","get","baseUrl","createOrder","order","post","updateOrder","id","put","deleteOrder","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\app_angular\\ecommerce-app\\src\\app\\services\\order.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Order } from '../models/order.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  private baseUrl = 'http://localhost:8082/orders'; // URL del microservicio en Java\n\n  constructor(private http: HttpClient) {}\n\n  getOrders(): Observable<Order[]> {\n    return this.http.get<Order[]>(this.baseUrl);\n  }\n\n  createOrder(order: Order): Observable<Order> {\n    return this.http.post<Order>(`${this.baseUrl}/create`, order);\n  }\n\n  updateOrder(id: number, order: Order): Observable<Order> {\n    return this.http.put<Order>(`${this.baseUrl}/${id}`, order);\n  }\n\n  deleteOrder(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}