{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'http://localhost:8000/api/products'; // URL del microservicio en Java\n    }\n\n    getProducts() {\n      return this.http.get(this.apiUrl);\n    }\n    getProductById(productId) {\n      return this.http.get(`${this.apiUrl}/${productId}`);\n    }\n    /* createProduct(product: Product): Observable<Product> {\r\n       return this.http.post<Product>(this.apiUrl, product);\r\n     }*/\n    createProduct(formData) {\n      return this.http.post(this.apiUrl, formData);\n    }\n    /*updateProduct(product: Product): Observable<Product> {\r\n      return this.http.put<Product>(`${this.apiUrl}/${product.id}`, product);\r\n    }*/\n    updateProduct(productId, formData) {\n      return this.http.post(`${this.apiUrl}/update/${productId}`, formData);\n    }\n    deleteImage(productId, imageId) {\n      return this.http.delete(`${this.apiUrl}/${productId}/images/${imageId}`);\n    }\n    deleteProduct(productId) {\n      return this.http.delete(`${this.apiUrl}/${productId}`);\n    }\n    static #_ = this.ɵfac = function ProductService_Factory(t) {\n      return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProductService,\n      factory: ProductService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}