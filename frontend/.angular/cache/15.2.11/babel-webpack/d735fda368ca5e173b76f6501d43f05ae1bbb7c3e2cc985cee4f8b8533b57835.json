{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/order.service\";\nimport * as i4 from \"../services/product.service\";\nimport * as i5 from \"@angular/common\";\nfunction CreateOrderComponent_div_22_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const product_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", product_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(product_r7.name);\n  }\n}\nfunction CreateOrderComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"label\");\n    i0.ɵɵtext(2, \"Product:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 24);\n    i0.ɵɵtemplate(4, CreateOrderComponent_div_22_option_4_Template, 2, 2, \"option\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"label\");\n    i0.ɵɵtext(6, \"Quantity:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 26);\n    i0.ɵɵelementStart(8, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function CreateOrderComponent_div_22_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const i_r5 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.removeProduct(i_r5));\n    });\n    i0.ɵɵtext(9, \"Remove\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r5 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r5);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.products);\n  }\n}\nfunction CreateOrderComponent_div_27_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"li\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const product_r13 = ctx.ngIf;\n    const detail_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate5(\" \", detail_r10.value.product_id, \" - \", product_r13.name, \" - \", product_r13.description, \" - \", product_r13.price, \"$ x \", detail_r10.value.quantity, \" \");\n  }\n}\nfunction CreateOrderComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"ul\");\n    i0.ɵɵtemplate(2, CreateOrderComponent_div_27_ng_container_2_Template, 3, 5, \"ng-container\", 28);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const detail_r10 = ctx.$implicit;\n    const i_r11 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r11);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.getProductById(detail_r10.value.product_id));\n  }\n}\nfunction CreateOrderComponent_div_53_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const product_r18 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", product_r18.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(product_r18.name);\n  }\n}\nfunction CreateOrderComponent_div_53_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"label\", 29);\n    i0.ɵɵtext(2, \"Product\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 30);\n    i0.ɵɵtemplate(4, CreateOrderComponent_div_53_option_4_Template, 2, 2, \"option\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"label\", 31);\n    i0.ɵɵtext(6, \"Quantity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 32);\n    i0.ɵɵelementStart(8, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function CreateOrderComponent_div_53_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const i_r16 = restoredCtx.index;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.removeProduct(i_r16));\n    });\n    i0.ɵɵtext(9, \"Remove\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r16 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r16);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.products);\n  }\n}\nfunction CreateOrderComponent_div_58_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"li\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const product_r24 = ctx.ngIf;\n    const detail_r21 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate5(\" \", detail_r21.value.product_id, \" - \", product_r24.name, \" - \", product_r24.description, \" - \", product_r24.price, \"$ x \", detail_r21.value.quantity, \" \");\n  }\n}\nfunction CreateOrderComponent_div_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"ul\");\n    i0.ɵɵtemplate(2, CreateOrderComponent_div_58_ng_container_2_Template, 3, 5, \"ng-container\", 28);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const detail_r21 = ctx.$implicit;\n    const i_r22 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r22);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.getProductById(detail_r21.value.product_id));\n  }\n}\nexport class CreateOrderComponent {\n  constructor(fb, route, router, orderService, productService) {\n    this.fb = fb;\n    this.route = route;\n    this.router = router;\n    this.orderService = orderService;\n    this.productService = productService;\n    this.products = [];\n    this.isEditMode = false;\n    this.orderId = null;\n    this.orderForm = this.fb.group({\n      date: ['', Validators.required],\n      status: ['', Validators.required],\n      delivery_address: ['', Validators.required],\n      payment_method: ['', Validators.required],\n      user_id: ['', Validators.required],\n      orderDetails: this.fb.array([])\n    });\n  }\n  ngOnInit() {\n    this.productService.getProducts().subscribe(data => {\n      this.products = data;\n    });\n    this.route.paramMap.subscribe(params => {\n      this.orderId = Number(params.get('id'));\n      this.isEditMode = !!this.orderId;\n      if (this.isEditMode && this.orderId) {\n        this.loadOrder(this.orderId);\n      }\n    });\n  }\n  get orderDetails() {\n    return this.orderForm.get('orderDetails');\n  }\n  addProduct() {\n    const orderDetailGroup = this.fb.group({\n      product_id: ['', Validators.required],\n      quantity: ['', [Validators.required, Validators.min(1)]]\n    });\n    this.orderDetails.push(orderDetailGroup);\n  }\n  removeProduct(index) {\n    this.orderDetails.removeAt(index);\n  }\n  getProduct(productId) {\n    const product = this.products.find(product => product.id === productId);\n    console.log(`Product ID: ${productId}, Product:`, product); // Debugging line\n    return product;\n  }\n  getProductById(productId) {\n    return this.products.find(product => product.id === productId);\n  }\n  getProductName(productId) {\n    const product = this.getProduct(productId);\n    return product ? product.name : 'Producto no encontrado';\n  }\n  getProductPrice(productId) {\n    const product = this.getProduct(productId);\n    return product ? product.price : 0;\n  }\n  loadOrder(orderId) {\n    this.orderService.getOrderById(orderId).subscribe(order => {\n      this.orderForm.patchValue({\n        date: order.date,\n        status: order.status,\n        delivery_address: order.deliveryAddress,\n        payment_method: order.paymentMethod,\n        user_id: order.userId\n      });\n      order.orderDetails.forEach(detail => {\n        this.orderDetails.push(this.fb.group({\n          product_id: [detail.productId, Validators.required],\n          quantity: [detail.quantity, [Validators.required, Validators.min(1)]]\n        }));\n      });\n    });\n  }\n  onSubmit() {\n    if (this.orderForm.valid) {\n      const orderData = {\n        order: {\n          date: this.orderForm.value.date,\n          status: this.orderForm.value.status,\n          deliveryAddress: this.orderForm.value.delivery_address,\n          paymentMethod: this.orderForm.value.payment_method,\n          userId: this.orderForm.value.user_id\n        },\n        orderDetails: this.orderForm.value.orderDetails.map(detail => ({\n          productId: detail.product_id,\n          quantity: detail.quantity\n        }))\n      };\n      if (this.isEditMode && this.orderId) {\n        this.orderService.updateOrder(this.orderId, orderData).subscribe(response => {\n          console.log('Order updated', response);\n          this.router.navigate(['/orders']);\n        });\n      } else {\n        this.orderService.createOrder(orderData).subscribe(response => {\n          console.log('Order created', response);\n          this.router.navigate(['/orders']);\n        });\n      }\n    }\n  }\n  static #_ = this.ɵfac = function CreateOrderComponent_Factory(t) {\n    return new (t || CreateOrderComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.OrderService), i0.ɵɵdirectiveInject(i4.ProductService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateOrderComponent,\n    selectors: [[\"app-create-order\"]],\n    decls: 61,\n    vars: 10,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"date\"], [\"type\", \"date\", \"formControlName\", \"date\", \"required\", \"\"], [\"for\", \"status\"], [\"type\", \"text\", \"formControlName\", \"status\", \"required\", \"\"], [\"for\", \"delivery_address\"], [\"type\", \"text\", \"formControlName\", \"delivery_address\", \"required\", \"\"], [\"for\", \"payment_method\"], [\"type\", \"text\", \"formControlName\", \"payment_method\", \"required\", \"\"], [\"for\", \"user_id\"], [\"type\", \"number\", \"formControlName\", \"user_id\", \"required\", \"\"], [\"formArrayName\", \"orderDetails\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"click\"], [\"type\", \"submit\", 3, \"disabled\"], [\"id\", \"date\", \"formControlName\", \"date\", \"type\", \"date\"], [\"id\", \"status\", \"formControlName\", \"status\", \"type\", \"text\"], [\"for\", \"deliveryAddress\"], [\"id\", \"deliveryAddress\", \"formControlName\", \"deliveryAddress\", \"type\", \"text\"], [\"for\", \"paymentMethod\"], [\"id\", \"paymentMethod\", \"formControlName\", \"paymentMethod\", \"type\", \"text\"], [\"for\", \"userId\"], [\"id\", \"userId\", \"formControlName\", \"userId\", \"type\", \"number\"], [3, \"formGroupName\"], [\"formControlName\", \"product_id\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"quantity\", \"type\", \"number\"], [3, \"value\"], [4, \"ngIf\"], [\"for\", \"productId\"], [\"id\", \"productId\", \"formControlName\", \"productId\"], [\"for\", \"quantity\"], [\"id\", \"quantity\", \"formControlName\", \"quantity\", \"type\", \"number\"]],\n    template: function CreateOrderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateOrderComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n        i0.ɵɵtext(3, \"Fecha:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\")(6, \"label\", 3);\n        i0.ɵɵtext(7, \"Estado:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\")(10, \"label\", 5);\n        i0.ɵɵtext(11, \"Direcci\\u00F3n de Entrega:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\")(14, \"label\", 7);\n        i0.ɵɵtext(15, \"M\\u00E9todo de Pago:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\")(18, \"label\", 9);\n        i0.ɵɵtext(19, \"ID del Usuario:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 11);\n        i0.ɵɵtemplate(22, CreateOrderComponent_div_22_Template, 10, 2, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function CreateOrderComponent_Template_button_click_23_listener() {\n          return ctx.addProduct();\n        });\n        i0.ɵɵtext(24, \"Add Product\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"h3\");\n        i0.ɵɵtext(26, \"Order Preview\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(27, CreateOrderComponent_div_27_Template, 3, 2, \"div\", 12);\n        i0.ɵɵelementStart(28, \"button\", 14);\n        i0.ɵɵtext(29);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtext(30, \"--> \");\n        i0.ɵɵelementStart(31, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateOrderComponent_Template_form_ngSubmit_31_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(32, \"div\")(33, \"label\", 1);\n        i0.ɵɵtext(34, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\")(37, \"label\", 3);\n        i0.ɵɵtext(38, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\")(41, \"label\", 17);\n        i0.ɵɵtext(42, \"Delivery Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(43, \"input\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"div\")(45, \"label\", 19);\n        i0.ɵɵtext(46, \"Payment Method\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(47, \"input\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"div\")(49, \"label\", 21);\n        i0.ɵɵtext(50, \"User ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(51, \"input\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"div\", 11);\n        i0.ɵɵtemplate(53, CreateOrderComponent_div_53_Template, 10, 2, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function CreateOrderComponent_Template_button_click_54_listener() {\n          return ctx.addProduct();\n        });\n        i0.ɵɵtext(55, \"Add Product\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"h3\");\n        i0.ɵɵtext(57, \"Order Preview\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(58, CreateOrderComponent_div_58_Template, 3, 2, \"div\", 12);\n        i0.ɵɵelementStart(59, \"button\", 14);\n        i0.ɵɵtext(60);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.orderForm);\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"ngForOf\", ctx.orderDetails.controls);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.orderDetails.controls);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.orderForm.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Actualizar Orden\" : \"Crear Orden\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.orderForm);\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"ngForOf\", ctx.orderDetails.controls);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.orderDetails.controls);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.orderForm.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Actualizar Orden\" : \"Crear Orden\");\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","CreateOrderComponent","constructor","fb","route","router","orderService","productService","orderForm","group","date","required","status","delivery_address","payment_method","user_id","orderDetails","array","ngOnInit","getProducts","subscribe","data","products","paramMap","params","orderId","Number","get","isEditMode","loadOrder","addProduct","orderDetailGroup","product_id","quantity","min","push","removeProduct","index","removeAt","getProduct","productId","product","find","id","console","log","getProductById","getProductName","name","getProductPrice","price","getOrderById","order","patchValue","deliveryAddress","paymentMethod","userId","forEach","detail","onSubmit","valid","orderData","value","map","updateOrder","response","navigate","createOrder","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\app_angular\\ecommerce-app\\src\\app\\create-order\\create-order.component.ts","C:\\app_angular\\ecommerce-app\\src\\app\\create-order\\create-order.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OrderService } from '../services/order.service';\nimport { ProductService } from '../services/product.service';\nimport { Product } from '../models/product.model';\nimport { Order, OrderItem } from '../models/order.model';\n\n@Component({\n  selector: 'app-create-order',\n  templateUrl: './create-order.component.html',\n  styleUrls: ['./create-order.component.css']\n})\nexport class CreateOrderComponent implements OnInit {\n  orderForm: FormGroup;\n  products: Product[] = [];\n  isEditMode: boolean = false;\n  orderId: number | null = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private orderService: OrderService,\n    private productService: ProductService\n  ) {\n    this.orderForm = this.fb.group({\n      date: ['', Validators.required],\n      status: ['', Validators.required],\n      delivery_address: ['', Validators.required],\n      payment_method: ['', Validators.required],\n      user_id: ['', Validators.required],\n      orderDetails: this.fb.array([])\n    });\n  }\n\n  ngOnInit() {\n    this.productService.getProducts().subscribe(data => {\n      this.products = data;\n    });\n\n    this.route.paramMap.subscribe(params => {\n      this.orderId = Number(params.get('id'));\n      this.isEditMode = !!this.orderId;\n\n      if (this.isEditMode && this.orderId) {\n        this.loadOrder(this.orderId);\n      }\n    });\n  }\n\n  get orderDetails() {\n    return this.orderForm.get('orderDetails') as FormArray;\n  }\n\n  addProduct() {\n    const orderDetailGroup = this.fb.group({\n      product_id: ['', Validators.required],\n      quantity: ['', [Validators.required, Validators.min(1)]]\n    });\n    this.orderDetails.push(orderDetailGroup);\n  }\n\n  removeProduct(index: number) {\n    this.orderDetails.removeAt(index);\n  }\n\n  getProduct(productId: number): Product | undefined {\n    const product = this.products.find(product => product.id === productId);\n    console.log(`Product ID: ${productId}, Product:`, product); // Debugging line\n    return product;\n  }\n\n  getProductById(productId: number): Product | undefined {\n    return this.products.find(product => product.id === productId);    \n  }\n\n  getProductName(productId: number): string {\n    const product = this.getProduct(productId);\n    return product ? product.name : 'Producto no encontrado';\n  }\n\n  getProductPrice(productId: number): number {\n    const product = this.getProduct(productId);\n    return product ? product.price : 0;\n  }\n\n  loadOrder(orderId: number) {\n    this.orderService.getOrderById(orderId).subscribe(order => {\n      this.orderForm.patchValue({\n        date: order.date,\n        status: order.status,\n        delivery_address: order.deliveryAddress,\n        payment_method: order.paymentMethod,\n        user_id: order.userId,\n      });\n\n      order.orderDetails.forEach(detail => {\n        this.orderDetails.push(this.fb.group({\n          product_id: [detail.productId, Validators.required],\n          quantity: [detail.quantity, [Validators.required, Validators.min(1)]]\n        }));\n      });\n    });\n  }\n\n  onSubmit() {\n    if (this.orderForm.valid) {\n      const orderData = {\n        order: {\n          date: this.orderForm.value.date,\n          status: this.orderForm.value.status,\n          deliveryAddress: this.orderForm.value.delivery_address,\n          paymentMethod: this.orderForm.value.payment_method,\n          userId: this.orderForm.value.user_id\n        },\n        orderDetails: this.orderForm.value.orderDetails.map((detail: any) => ({\n          productId: detail.product_id,\n          quantity: detail.quantity\n        }))\n      };\n\n      if (this.isEditMode && this.orderId) {\n        this.orderService.updateOrder(this.orderId, orderData).subscribe(response => {\n          console.log('Order updated', response);\n          this.router.navigate(['/orders']);\n        });\n      } else {\n        this.orderService.createOrder(orderData).subscribe(response => {\n          console.log('Order created', response);\n          this.router.navigate(['/orders']);\n        });\n      }\n    }\n  }\n}\n","<form [formGroup]=\"orderForm\" (ngSubmit)=\"onSubmit()\">\n    <!-- Cabecera de la orden -->\n    <div>\n      <label for=\"date\">Fecha:</label>\n      <input type=\"date\" formControlName=\"date\" required>\n    </div>\n    <div>\n      <label for=\"status\">Estado:</label>\n      <input type=\"text\" formControlName=\"status\" required>\n    </div>\n    <div>\n      <label for=\"delivery_address\">Dirección de Entrega:</label>\n      <input type=\"text\" formControlName=\"delivery_address\" required>\n    </div>\n    <div>\n      <label for=\"payment_method\">Método de Pago:</label>\n      <input type=\"text\" formControlName=\"payment_method\" required>\n    </div>\n    <div>\n      <label for=\"user_id\">ID del Usuario:</label>\n      <input type=\"number\" formControlName=\"user_id\" required>\n    </div>\n    \n    <!-- Detalles de la orden -->\n    <div formArrayName=\"orderDetails\">\n        <div *ngFor=\"let detail of orderDetails.controls; let i = index\" [formGroupName]=\"i\">\n            <label>Product:</label>\n            <select formControlName=\"product_id\">\n              <option *ngFor=\"let product of products\" [value]=\"product.id\">{{ product.name }}</option>\n            </select>\n            <label>Quantity:</label>\n            <input formControlName=\"quantity\" type=\"number\">\n            <button type=\"button\" (click)=\"removeProduct(i)\">Remove</button>\n          </div>\n        </div>\n        <button type=\"button\" (click)=\"addProduct()\">Add Product</button>\n      \n        <h3>Order Preview</h3>\n        <div *ngFor=\"let detail of orderDetails.controls; let i = index\" [formGroupName]=\"i\">\n          <ul>      \n            \n              <ng-container *ngIf=\"getProductById(detail.value.product_id) as product\">\n                <li>\n                  {{detail.value.product_id }} - {{ product.name }} - {{ product.description }} - {{ product.price }}$ x {{  detail.value.quantity}}\n                </li>\n              \n            </ng-container>\n          </ul>          \n        </div>\n    <button type=\"submit\" [disabled]=\"!orderForm.valid\">{{ isEditMode ? 'Actualizar Orden' : 'Crear Orden' }}</button>\n  </form>-->\n\n  <form [formGroup]=\"orderForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label for=\"date\">Date</label>\n      <input id=\"date\" formControlName=\"date\" type=\"date\">\n    </div>\n    <div>\n      <label for=\"status\">Status</label>\n      <input id=\"status\" formControlName=\"status\" type=\"text\">\n    </div>\n    <div>\n      <label for=\"deliveryAddress\">Delivery Address</label>\n      <input id=\"deliveryAddress\" formControlName=\"deliveryAddress\" type=\"text\">\n    </div>\n    <div>\n      <label for=\"paymentMethod\">Payment Method</label>\n      <input id=\"paymentMethod\" formControlName=\"paymentMethod\" type=\"text\">\n    </div>\n    <div>\n      <label for=\"userId\">User ID</label>\n      <input id=\"userId\" formControlName=\"userId\" type=\"number\">\n    </div>\n  \n    <div formArrayName=\"orderDetails\">\n      <div *ngFor=\"let detail of orderDetails.controls; let i = index\" [formGroupName]=\"i\">\n        <label for=\"productId\">Product</label>\n        <select id=\"productId\" formControlName=\"productId\">\n          <option *ngFor=\"let product of products\" [value]=\"product.id\">{{ product.name }}</option>\n        </select>\n  \n        <label for=\"quantity\">Quantity</label>\n        <input id=\"quantity\" formControlName=\"quantity\" type=\"number\">\n  \n        <button type=\"button\" (click)=\"removeProduct(i)\">Remove</button>\n      </div>\n    </div>\n  \n    <button type=\"button\" (click)=\"addProduct()\">Add Product</button>\n\n    <h3>Order Preview</h3>\n    <div *ngFor=\"let detail of orderDetails.controls; let i = index\" [formGroupName]=\"i\">\n      <ul>      \n        \n          <ng-container *ngIf=\"getProductById(detail.value.product_id) as product\">\n            <li>\n              {{detail.value.product_id }} - {{ product.name }} - {{ product.description }} - {{ product.price }}$ x {{  detail.value.quantity}}\n            </li>\n          \n        </ng-container>\n      </ul>          \n    </div>\n\n    <button type=\"submit\" [disabled]=\"!orderForm.valid\">{{ isEditMode ? 'Actualizar Orden' : 'Crear Orden' }}</button>\n  </form>\n \n  \n\n  \n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}