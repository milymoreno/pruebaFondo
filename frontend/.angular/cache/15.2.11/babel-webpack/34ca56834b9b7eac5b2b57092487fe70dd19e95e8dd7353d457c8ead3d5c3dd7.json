{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/fondo.service\";\nexport class FondosComponent {\n  constructor(fondoService) {\n    this.fondoService = fondoService;\n    this.fondosDisponibles = [];\n  }\n  ngOnInit() {\n    this.getFondos();\n  }\n  getFondos() {\n    this.fondoService.getFondos().subscribe(fondos => {\n      this.fondosDisponibles = fondos;\n    });\n  }\n  asociarFondos() {\n    const fondosSeleccionados = this.fondosDisponibles.filter(fondo => fondo.selected);\n    console.log(fondosSeleccionados);\n    // Aquí puedes agregar la lógica para enviar los fondos seleccionados al backendngOnInit(): void {\n    this.getFondos(); // Llama al método getFondos() al iniciar el componente\n  }\n\n  getFondos() {\n    this.fondoService.getFondos().subscribe(fondos => {\n      this.fondosDisponibles = fondos; // Asigna los fondos recibidos al array fondosDisponibles\n    }, error => {\n      console.error('Error al obtener los fondos:', error);\n      // Manejo de errores, si es necesario\n    });\n  }\n  static #_ = this.ɵfac = function FondosComponent_Factory(t) {\n    return new (t || FondosComponent)(i0.ɵɵdirectiveInject(i1.FondoService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FondosComponent,\n    selectors: [[\"app-fondos\"]],\n    decls: 2,\n    vars: 0,\n    template: function FondosComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"fondos works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAI1BC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAFhC,sBAAiB,GAAY,EAAE;EAEmB;EAElDC,QAAQ;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAAS;IACP,IAAI,CAACF,YAAY,CAACE,SAAS,EAAE,CAACC,SAAS,CAACC,MAAM,IAAG;MAC/C,IAAI,CAACC,iBAAiB,GAAGD,MAAM;IACjC,CAAC,CAAC;EACJ;EAEAE,aAAa;IACX,MAAMC,mBAAmB,GAAG,IAAI,CAACF,iBAAiB,CAACG,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAAC;IAClFC,OAAO,CAACC,GAAG,CAACL,mBAAmB,CAAC;IAChC;IACA,IAAI,CAACL,SAAS,EAAE,CAAC,CAAC;EACpB;;EAEAA,SAAS;IACP,IAAI,CAACF,YAAY,CAACE,SAAS,EAAE,CAACC,SAAS,CACrCC,MAAM,IAAG;MACP,IAAI,CAACC,iBAAiB,GAAGD,MAAM,CAAC,CAAC;IACnC,CAAC,EACDS,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC,CACF;EACH;EAAC;qBAjCUf,eAAe;EAAA;EAAA;UAAfA,eAAe;IAAAgB;IAAAC;IAAAC;IAAAC;MAAA;QCR5BC,yBAAG;QAAAA,6BAAa;QAAAA,iBAAI","names":["FondosComponent","constructor","fondoService","ngOnInit","getFondos","subscribe","fondos","fondosDisponibles","asociarFondos","fondosSeleccionados","filter","fondo","selected","console","log","error","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\fondo\\frontend\\src\\app\\fondos\\fondos.component.ts","C:\\fondo\\frontend\\src\\app\\fondos\\fondos.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FondoService } from '../services/fondo.service';\nimport { Fondo } from '../models/fondo.model';\n@Component({\n  selector: 'app-fondos',\n  templateUrl: './fondos.component.html',\n  styleUrls: ['./fondos.component.css']\n})\nexport class FondosComponent implements OnInit {\n\n  fondosDisponibles: Fondo[] = [];\n\n  constructor(private fondoService: FondoService) { }\n\n  ngOnInit(): void {\n    this.getFondos();\n  }\n\n  getFondos(): void {\n    this.fondoService.getFondos().subscribe(fondos => {\n      this.fondosDisponibles = fondos;\n    });\n  }\n\n  asociarFondos(): void {\n    const fondosSeleccionados = this.fondosDisponibles.filter(fondo => fondo.selected);\n    console.log(fondosSeleccionados);\n    // Aquí puedes agregar la lógica para enviar los fondos seleccionados al backendngOnInit(): void {\n    this.getFondos(); // Llama al método getFondos() al iniciar el componente\n  }\n\n  getFondos(): void {\n    this.fondoService.getFondos().subscribe(\n      fondos => {\n        this.fondosDisponibles = fondos; // Asigna los fondos recibidos al array fondosDisponibles\n      },\n      error => {\n        console.error('Error al obtener los fondos:', error);\n        // Manejo de errores, si es necesario\n      }\n    );\n  }\n  }\n}","<p>fondos works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}