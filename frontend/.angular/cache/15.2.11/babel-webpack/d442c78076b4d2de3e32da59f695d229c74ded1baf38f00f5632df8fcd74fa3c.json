{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/order.service\";\nimport * as i2 from \"../services/product.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction OrdersComponent_li_4_li_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", item_r4.quantity, \"x \", item_r4.product.name, \" - \", item_r4.product.price, \"$ \");\n  }\n}\nfunction OrdersComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"div\")(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"p\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"ul\");\n    i0.ɵɵtemplate(18, OrdersComponent_li_4_li_18_Template, 2, 3, \"li\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function OrdersComponent_li_4_Template_button_click_19_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const order_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteOrder(order_r2._id));\n    });\n    i0.ɵɵtext(20, \"Eliminar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function OrdersComponent_li_4_Template_button_click_21_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const order_r2 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.editOrder(order_r2));\n    });\n    i0.ɵɵtext(22, \"Editar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const order_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Orden #\", order_r2._id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Cliente ID: \", order_r2.customerId, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Direcci\\u00F3n: \", order_r2.address, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Fecha: \", i0.ɵɵpipeBind1(10, 8, order_r2.date), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Estado: \", order_r2.status, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"M\\u00E9todo de Pago: \", order_r2.paymentMethod, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Total: \", order_r2.total, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", order_r2.items);\n  }\n}\nfunction OrdersComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\")(2, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function OrdersComponent_div_12_Template_input_ngModelChange_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const product_r8 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.selectedProducts[product_r8._id !== undefined ? product_r8._id : \"\"] = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function OrdersComponent_div_12_Template_input_ngModelChange_4_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const product_r8 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.selectedProducts[product_r8._id !== undefined ? product_r8._id : 0] = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const product_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.selectedProducts[product_r8._id !== undefined ? product_r8._id : \"\"])(\"value\", product_r8._id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", product_r8.name, \" - \", product_r8.price, \"$ \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.selectedProducts[product_r8._id !== undefined ? product_r8._id : 0])(\"value\", product_r8._id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", product_r8.name, \" - \", product_r8.price, \"$ \");\n  }\n}\nlet OrdersComponent = class OrdersComponent {\n  constructor(orderService, productService) {\n    this.orderService = orderService;\n    this.productService = productService;\n    this.orders = [];\n    this.newOrder = {\n      userId: '',\n      deliveryAddresss: '',\n      paymentMethod: '',\n      total: 0,\n      date: new Date(),\n      status: '',\n      orderDetails: []\n    }; // Define una nueva orden\n    this.selectedProducts = {}; // Define un objeto para almacenar los productos seleccionados\n    this.products = []; // Define un arreglo de productos\n  }\n\n  ngOnInit() {\n    this.loadOrders();\n    this.loadProducts();\n  }\n  loadOrders() {\n    this.orderService.getOrders().subscribe(data => {\n      this.orders = data;\n    });\n  }\n  loadProducts() {\n    this.productService.getProducts().subscribe(data => {\n      this.products = data;\n    });\n  }\n  addOrder() {\n    this.newOrder.orderDetails = Object.keys(this.selectedProducts).filter(productId => this.selectedProducts[parseInt(productId, 10)]).map(productId => ({\n      productId: parseInt(productId, 10),\n      quantity: 1,\n      price: this.products.find(product => product._id === parseInt(productId, 10)).price\n    }));\n    this.orderService.createOrder(this.newOrder).subscribe(() => {\n      this.loadOrders();\n      this.newOrder = {\n        userId: '',\n        deliveryAddresss: '',\n        status: '',\n        paymentMethod: '',\n        total: 0,\n        orderDetails: []\n      };\n      this.selectedProducts = {};\n    });\n  }\n  updateOrder(id) {\n    this.newOrder.total = this.calculateTotal(this.newOrder.orderDetails);\n    this.orderService.updateOrder(id, this.newOrder).subscribe(() => {\n      this.loadOrders();\n    });\n  }\n  deleteOrder(id) {\n    this.orderService.deleteOrder(id).subscribe(() => {\n      this.loadOrders();\n    });\n  }\n  editOrder(order) {\n    this.newOrder = {\n      ...order\n    };\n  }\n  calculateTotal(items) {\n    return items.reduce((total, item) => total + item.price * item.quantity, 0);\n  }\n  static #_ = this.ɵfac = function OrdersComponent_Factory(t) {\n    return new (t || OrdersComponent)(i0.ɵɵdirectiveInject(i1.OrderService), i0.ɵɵdirectiveInject(i2.ProductService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OrdersComponent,\n    selectors: [[\"app-orders\"]],\n    decls: 15,\n    vars: 8,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"ngSubmit\"], [\"name\", \"customerId\", \"placeholder\", \"ID del Cliente\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"address\", \"placeholder\", \"Direcci\\u00F3n\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"paymentMethod\", \"placeholder\", \"M\\u00E9todo de Pago\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"total\", \"placeholder\", \"Total\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"date\", \"type\", \"date\", \"placeholder\", \"Fecha\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"status\", \"placeholder\", \"Estado\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [3, \"click\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"value\", \"ngModelChange\"]],\n    template: function OrdersComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"\\u00D3rdenes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"ul\");\n        i0.ɵɵtemplate(4, OrdersComponent_li_4_Template, 23, 10, \"li\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function OrdersComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.addOrder();\n        });\n        i0.ɵɵelementStart(6, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function OrdersComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.newOrder.userId = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function OrdersComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.newOrder.deliveryAddresss = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function OrdersComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.newOrder.paymentMethod = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function OrdersComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.newOrder.total = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function OrdersComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.newOrder.date = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function OrdersComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.newOrder.status = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, OrdersComponent_div_12_Template, 6, 8, \"div\", 0);\n        i0.ɵɵelementStart(13, \"button\", 8);\n        i0.ɵɵtext(14, \"Agregar Orden\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.orders);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.newOrder.userId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.newOrder.deliveryAddresss);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.newOrder.paymentMethod);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.newOrder.total);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.newOrder.date);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.newOrder.status);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.products);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.CheckboxControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i3.DatePipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n};\nOrdersComponent = __decorate([Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})], OrdersComponent);\nexport { OrdersComponent };","map":{"version":3,"mappings":"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","names":["Component","i0","undefined","OrdersComponent","constructor","orderService","productService","userId","deliveryAddresss","paymentMethod","total","date","Date","status","orderDetails","ngOnInit","loadOrders","loadProducts","getOrders","subscribe","data","orders","getProducts","products","addOrder","newOrder","Object","keys","selectedProducts","filter","productId","parseInt","map","quantity","price","find","product","_id","createOrder","updateOrder","id","calculateTotal","deleteOrder","editOrder","order","items","reduce","item","selectors","decls","vars","consts","template","ctx","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\app_angular\\ecommerce-app\\src\\app\\orders\\orders.component.ts","C:\\app_angular\\ecommerce-app\\src\\app\\orders\\orders.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../services/product.service'; // Importa el servicio de productos\nimport { OrderService } from '../services/order.service'; // Importa el servicio de órdenes\nimport { Product } from '../models/product.model'; // Importa el modelo de productos\nimport { Order, OrderItem } from '../models/order.model'; // Importa el modelo de órdenes\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n  orders: Order[] = [];\n  newOrder: Order = { userId: '', deliveryAddresss: '', paymentMethod: '', total: 0, date: new Date(), status: '', orderDetails: [] }; // Define una nueva orden\n  selectedProducts: { [productId: number]: boolean } = {}; // Define un objeto para almacenar los productos seleccionados\n\n  products: Product[] = []; // Define un arreglo de productos\n\n  constructor(private orderService: OrderService, private productService: ProductService) {}\n\n  ngOnInit(): void {\n    this.loadOrders();\n    this.loadProducts();\n  }\n\n  loadOrders(): void {\n    this.orderService.getOrders().subscribe(data => {\n      this.orders = data;\n    });\n  }\n\n  loadProducts(): void {\n    this.productService.getProducts().subscribe(data => {\n      this.products = data;\n    });\n  }\n\n  addOrder(): void {\n    this.newOrder.orderDetails = Object.keys(this.selectedProducts)\n      .filter((productId: string) => this.selectedProducts[parseInt(productId, 10)])\n      .map((productId: string) => ({\n        productId: parseInt(productId, 10),\n        quantity: 1,\n        price: this.products.find(product => product._id === parseInt(productId, 10))!.price\n      }));\n    \n    this.orderService.createOrder(this.newOrder).subscribe(() => {\n      this.loadOrders();\n      this.newOrder = { userId: '', deliveryAddresss: '', status: '', paymentMethod: '', total: 0, orderDetails: [] };\n      this.selectedProducts = {};\n    });\n  }\n  \n\n  updateOrder(id: number): void {\n    this.newOrder.total = this.calculateTotal(this.newOrder.orderDetails);\n    this.orderService.updateOrder(id, this.newOrder).subscribe(() => {\n      this.loadOrders();\n    });\n  }\n\n  deleteOrder(id: number): void {\n    this.orderService.deleteOrder(id).subscribe(() => {\n      this.loadOrders();\n    });\n  }\n\n  editOrder(order: Order): void {\n    this.newOrder = { ...order };\n  }\n\n  calculateTotal(items: OrderItem[]): number {\n    return items.reduce((total, item) => total + item.price * item.quantity, 0);\n  }\n}\n\n","<div>\n    <h2>Órdenes</h2>\n    <ul>\n      <li *ngFor=\"let order of orders\">\n        <div>\n          <h3>Orden #{{ order._id }}</h3>\n          <p>Cliente ID: {{ order.customerId }}</p>\n          <p>Dirección: {{ order.address }}</p>\n          <p>Fecha: {{ order.date | date }}</p>\n          <p>Estado: {{ order.status }}</p>\n          <p>Método de Pago: {{ order.paymentMethod }}</p>\n          <p>Total: {{ order.total }}</p>\n          <ul>\n            <li *ngFor=\"let item of order.items\">\n              {{ item.quantity }}x {{ item.product.name }} - {{ item.product.price }}$\n            </li>\n          </ul>\n          <button (click)=\"deleteOrder(order._id)\">Eliminar</button>\n          <button (click)=\"editOrder(order)\">Editar</button>\n        </div>\n      </li>\n    </ul>\n    <!-- Formulario para agregar órdenes -->\n    <form (ngSubmit)=\"addOrder()\">\n      <input [(ngModel)]=\"newOrder.userId\" name=\"customerId\" placeholder=\"ID del Cliente\" required />\n      <input [(ngModel)]=\"newOrder.deliveryAddresss\" name=\"address\" placeholder=\"Dirección\" required />\n      <input [(ngModel)]=\"newOrder.paymentMethod\" name=\"paymentMethod\" placeholder=\"Método de Pago\" required />\n      <input [(ngModel)]=\"newOrder.total\" name=\"total\" placeholder=\"Total\" required />\n      <input [(ngModel)]=\"newOrder.date\" name=\"date\" type=\"date\" placeholder=\"Fecha\" required />\n      <input [(ngModel)]=\"newOrder.status\" name=\"status\" placeholder=\"Estado\" required />\n      <div *ngFor=\"let product of products\">\n        <label>\n            <!--input type=\"checkbox\" [(ngModel)]=\"selectedProducts[product._id]\" [value]=\"product._id\" /> {{ product.name }} - {{ product.price }}$  -->\n            <input type=\"checkbox\" [(ngModel)]=\"selectedProducts[product._id !== undefined ? product._id : '']\" [value]=\"product._id\" /> {{ product.name }} - {{ product.price }}$\n            <input type=\"checkbox\" [(ngModel)]=\"selectedProducts[product._id !== undefined ? product._id : 0]\" [value]=\"product._id\" /> {{ product.name }} - {{ product.price }}$\n\n\n        </label>\n      </div>\n      <button type=\"submit\">Agregar Orden</button>\n    </form>\n  </div>\n  \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}